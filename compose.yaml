services:
  fastapi:
    build: ./
    restart: unless-stopped
#    ports: # for local deployment
#      - "80:80" # for local deployment
    networks:
      - traefik-public # 2
    labels:
      - traefik.enable=true # 2, 3
      - traefik.http.services.app.loadbalancer.server.port=80 # 2
      - traefik.http.routers.app-http.entrypoints=http # 2
      - traefik.http.routers.app-http.rule=Host(`ivankud.com`) # 2, 3
      - traefik.docker.network=traefik-public # 2
      - traefik.http.routers.app-https.entrypoints=https # 2
      - traefik.http.routers.app-https.rule=Host(`ivankud.com`) # 2
      - traefik.http.routers.app-https.tls=true # 2
#      - traefik.http.routers.app-http.tls=true # 3
      - traefik.http.routers.app-https.tls.certresolver=le # 2
#      - traefik.http.routers.app-http.tls.certresolver=letsencrypt # 3
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https # 2
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true # 2
      - traefik.http.routers.app-http.middlewares=https-redirect # 2
      # To use auth for that application
#      - traefik.http.routers.app-https.middlewares=admin-auth # 2

  traefik:
#    image: traefik:v2.2 # 1 digitalocean
    image: traefik:v2.3 # 2 tiangolo
#    image: traefik:v2.3 # 3 towardsDS
#    image: traefik:v2.8 # 4 unixhost
    restart: unless-stopped
    ports:
      - "80:80" # 2, 3
      - "443:443" # 2, 3
    networks:
      - traefik-public # 2
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro # 2, 3
      - traefik-public-certificates:/certificates # 2, 3
    labels:
      - traefik.enable=true # 2
      - traefik.http.services.traefik-dashboard.loadbalancer.server.port=8080 # 2
      - traefik.http.routers.traefik-dashboard-http.entrypoints=http # 2
      - traefik.http.routers.traefik-dashboard-http.rule=Host(`traefik.ivankud.com`) # 2
      - traefik.docker.network=traefik-public # 2
      - traefik.http.routers.traefik-dashboard-https.entrypoints=https # 2
      - traefik.http.routers.traefik-dashboard-https.rule=Host(`traefik.ivankud.com`) # 2
      - traefik.http.routers.traefik-dashboard-https.tls=true # 2
      - traefik.http.routers.traefik-dashboard-https.tls.certresolver=le # 2
      - traefik.http.routers.traefik-dashboard-https.service=api@internal
      - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https # 2
      - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true # 2
      - traefik.http.routers.traefik-dashboard-http.middlewares=https-redirect # 2
      - traefik.http.middlewares.admin-auth.basicauth.users=${TRAEFIK_USERNAME?Variable not set}:${TRAEFIK_HASHED_PASSWORD?Variable not set} # 2
      - traefik.http.routers.traefik-dashboard-https.middlewares=admin-auth # 2

    command:
      - --providers.docker # 2, 3
      - --providers.docker.exposedbydefault=false # 2, 3
      - --entrypoints.http.address=:80 # 2, 3
      - --entrypoints.https.address=:443 # 2, 3
      - --certificatesresolvers.le.acme.email=ivan.kudashkin@gmail.com # 2, 3
      - --certificatesresolvers.le.acme.storage=/certificates/acme.json # 2
#      - --certificatesresolvers.le.acme.storage=acme.json # 3
      - --certificatesresolvers.le.acme.tlschallenge=true # 2
#      - --certificatesresolvers.le.acme.httpchallenge... # 3
      - --accesslog # 2, 3
      - --log # 2
      - --api # 2

volumes:
  traefik-public-certificates: # 2, 3

networks:
  traefik-public: # 2
    external: true # 2
#    external: false # for local deployment